apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: docker.io/ecdeise/flask-app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: REACT_APP_SERVICE
              value: react-app-service
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_DB
            - name: SQLALCHEMY_DATABASE_URI
              value: postgresql://<POSTGRES_USER>:<POSTGRES_PASSWORD>@postgres-service:5432/<POSTGRES_DB>
          volumeMounts:
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data
            - name: gunicorn-logs
              mountPath: /app/logs
            - name: image-upload-storage
              mountPath: /app/uploads
            - name: dev-video0
              mountPath: /dev/video0
              readOnly: true
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: gunicorn-logs
          emptyDir: {}
        - name: image-upload-storage
          persistentVolumeClaim:
            claimName: image-upload-pvc
        - name: dev-video0
          emptyDir:
            medium: Memory
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: flask-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: flask-app
#   template:
#     metadata:
#       labels:
#         app: flask-app
#     spec:
#       containers:
#         - name: flask-app
#           image: docker.io/ecdeise/flask-app:latest
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 5000
#           env:
#             - name: REACT_APP_SERVICE
#               value: react-app-service
#             - name: POSTGRES_USER
#               valueFrom:
#                 secretKeyRef:
#                   name: db-secrets
#                   key: POSTGRES_USER
#             - name: POSTGRES_PASSWORD
#               valueFrom:
#                 secretKeyRef:
#                   name: db-secrets
#                   key: POSTGRES_PASSWORD
#             - name: POSTGRES_DB
#               valueFrom:
#                 secretKeyRef:
#                   name: db-secrets
#                   key: POSTGRES_DB
#             - name: SQLALCHEMY_DATABASE_URI
#               value: postgresql://<POSTGRES_USER>:<POSTGRES_PASSWORD>@postgres-service:5432/<POSTGRES_DB>
#           volumeMounts:
#             - name: postgres-persistent-storage
#               mountPath: /var/lib/postgresql/data
#             - name: gunicorn-logs
#               mountPath: /app/logs
#             - name: image-upload-storage
#               mountPath: /app/uploads
#       volumes:
#         - name: postgres-persistent-storage
#           persistentVolumeClaim:
#             claimName: postgres-pvc
#         - name: gunicorn-logs
#           emptyDir: {}
#         - name: image-upload-storage
#           persistentVolumeClaim:
#             claimName: image-upload-pvc
